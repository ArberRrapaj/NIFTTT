swagger: "2.0"
info:
  description: "This is the API documentation of NIFTTT [GitHub Repo](https://github.com/ArberRrapaj/NIFTTT)."
  version: "1.0.0"
  title: "NIFTTT API Documentation"
host: "localhost"
tags:
- name: "user"
  description: "User related paths"
- name: "rule"
  description: "Rule related paths"
schemes:
- "https"
- "http"
paths:
  /login:
    post:
      tags:
      - "user"
      summary: "login a user"
      operationId: "loginUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Login Credentials"
        required: true
        schema:
          type: "object"
          properties:
            email:
              type: "string"
            loginPassword:
              type: "string"
      responses:
        200:
          description: "success"
        401:
          description: "unauthorized"
  /register:
    post:
      tags:
      - "user"
      summary: "register a user"
      operationId: "registerUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "user information"
        required: true
        schema:
          type: "object"
          properties:
            email:
              type: "string"
            registerFirstname:
              type: "string"
            registerPassword:
              type: "string"
            registerIcecream:
              type: "string"
      responses:
        200:
          description: "success"
        400:
          description: "email already used"
  /users/{email}:
    get:
      tags:
      - "user"
      summary: "Get user existance by email (returns 1 or 0)"
      operationId: "getUserByEmail"
      produces:
      - "application/json"
      parameters:
      - name: "email"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
        404:
          description: "not found"
    put:
      tags:
      - "user"
      summary: "Update a user"
      operationId: "updateUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "email"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "User Object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "success"
    delete:
      tags:
      - "user"
      summary: "Delete a user"
      operationId: "deleteUser"
      parameters:
      - name: "email"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
  /rules/{id}:
    get:
      tags:
      - "rule"
      summary: "Get rule by ID"
      operationId: "getRuleById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/Rule"
    put:
      tags:
      - "rule"
      summary: "Update a rule"
      operationId: "updateRule"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "Rule Object"
        required: true
        schema:
          $ref: "#/definitions/Rule"
      responses:
        200:
          description: "success"
    delete:
      tags:
      - "rule"
      summary: "Delete a rule"
      operationId: "deleteRule"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
      responses:
        200:
          description: "success"
  /rules:
    post:
      tags:
      - "rule"
      summary: "Add a rule (registration)"
      operationId: "postRule"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "ruleData"
        description: "Rule Object"
        required: true
        schema:
          $ref: "#/definitions/Rule"
      responses:
        200:
          description: "success"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
      firstName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
  Rule:
    type: "object"
    properties:
      id:
        type: "integer"
      label:
        type: "string"
      automationsTotal:
        type: "integer"
      automationsMonth:
        type: "integer"
      triggerId:
        type: "string"
      actionId:
        type: "string"
      triggerPayload:
        type: "object"
      actionPayload:
        type: "object"
